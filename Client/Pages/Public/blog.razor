@page "/blog"
@using Client.Components.Public.Blog

<Client.Components.Public.Shared.Navbar />

<main class="container min-vh-90 py-5">
    <div class="col">
        <h1 class="my-3">Blog</h1>
        <p>Click a category card to view the blog pose</p>
    </div>

    <div class="row">

        @if (InMemoryDatabaseCache.Categories != null)
        {
            for (var i = 0; i < InMemoryDatabaseCache.Categories.Count; i++)
            {
                <div class="col-md-4">
                    <CategoryCard Category="InMemoryDatabaseCache.Categories[i]"/>
                </div>
            }
        }

    </div>
</main>

<Client.Components.Public.Shared.Footer />

@implements IDisposable
@code
{
    [Inject] InMemoryDatabaseCache? InMemoryDatabaseCache { get; set; }

    protected override async Task OnInitializedAsync()
    {
        InMemoryDatabaseCache.OnCategoriesDataChanged += StateHasChanged;

        if (InMemoryDatabaseCache.Categories == null)
        {
            await InMemoryDatabaseCache.GetCategoriesFromDatabaseAndCache();
        }
    }

    // unsub from events else we will have memory leak
    public void Dispose()
    {
        InMemoryDatabaseCache.OnCategoriesDataChanged -= StateHasChanged;
    }
}